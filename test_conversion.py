import asyncio
from currency_service import CurrencyService

async def test_conversion():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é –≤–∞–ª—é—Ç"""
    service = CurrencyService()
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è USD -> EUR
    print("–¢–µ—Å—Ç 1: USD -> EUR")
    try:
        result = await service.convert_currency(100, 'USD', ['EUR'])
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    print("-" * 30)
    
    # –¢–µ—Å—Ç 2: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å –±–æ–ª—å—à–∏–º —á–∏—Å–ª–æ–º
    print("–¢–µ—Å—Ç 2: USD -> EUR (5700)")
    try:
        result = await service.convert_currency(5700, 'USD', ['EUR'])
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    print("-" * 30)
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–æ–≤
    print("–¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ USD")
    try:
        rates = await service.get_exchange_rates('USD')
        print(f"–ü–æ–ª—É—á–µ–Ω–æ –∫—É—Ä—Å–æ–≤: {len(rates) if rates else 0}")
        if rates:
            print(f"EUR –∫—É—Ä—Å: {rates.get('EUR', 'N/A')}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    await service.close()

if __name__ == "__main__":
    asyncio.run(test_conversion()) 